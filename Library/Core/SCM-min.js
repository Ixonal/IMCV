/*
The SubClassManager is a tool with which to make Javascript behave in a 
manor more similar to a class-based language. Multiple inheritance, polymorphism, 
and namespacing are supported, in addition to partial function overloading,
abstract class, and abstract function support.

Copyright (C) 2011 by Benjamin McGregor

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var COMOptions=COMOptions||{};if(!global)var global;typeof COMOptions.global!=="undefined"?global=COMOptions.global:typeof GLOBAL!=="undefined"?global=GLOBAL:typeof window!=="undefined"&&(global=window);function Namespace(a){this.__Namespace__=a}global.COM=global.COM||new Namespace("COM");global.COM.SCM=global.COM.SCM||new Namespace("SCM");COM.Namespace=Namespace;
COM.namespace=function(){var a={},b,c,d;for(b in arguments)for(d in c=COM.ClassObject.obtainNamespace(arguments[b]),c)!c[d].__Namespace__&&d!=="__Namespace__"&&(a[d]=c[d]);return a};COM.SCM.SubClassManager=function(){return this.init()};
COM.SCM.SubClassManager.prototype={trees:null,nodes:null,init:function(){this.trees=[];this.nodes=[];return this},addSubClass:function(a,b){var c=new COM.SCM.SubClassTreeNode(b),d=new COM.SCM.SubClassTreeNode(a),e,f,g,i=!1;for(e in this.trees)f=this.trees[e],g=f.hasNode(c),f=f.hasNode(d),g!==null?(f!==null?(g.linkSub(f),f.linkSuper(g)):(g.linkSub(d),d.linkSuper(g),this.nodes.push(d)),i=!0):f!==null&&(g===null?(f.linkSuper(c),c.linkSub(f),this.nodes.push(c),i=!0):i=!1);if(!(i&&this.trees.length>0))e=
new COM.SCM.SubClassTree(c),e.manager=this,c.linkSub(d),d.linkSuper(c),this.nodes.splice(0,0,c,d),this.trees.splice(this.trees.length,0,e)},clean:function(){for(var a in this.nodes)delete this.nodes[a];for(a in this.trees)this.trees[a].destroy();delete this.nodes;delete this.trees;return this.init()},initiateSubClassing:function(){for(var a in this.trees)this.trees[a].initiateSubClassing(this.trees[a].root)}};COM.SCM.SubClassTree=function(a){this.root=a;return this};
COM.SCM.SubClassTree.prototype={root:null,manager:null,destroy:function(){},insertSubNode:function(a,b){b.subClasses.push(a)},insertSuperNode:function(a,b){b.superClasses.push(a)},hasNode:function(a){if(this.root===null)return null;a=this.findNode(a,this.root);this.root.searched=!1;return a},findNode:function(a,b){var c,d;if(a.equals(b))return b;if(b.searched===!0)return null;b.searched=!0;for(c in b.subClasses)if(d=this.findNode(a,b.subClasses[c]),d!==null)return b.searched=!1,d;for(c in b.superClasses)if(d=
this.findNode(a,b.superClasses[c]),d!==null)return b.searched=!1,d;b.searched=!1;return null},initiateSubClassing:function(a){var b,c;if(a!==null){a.searched=!0;if(!a.checkSuperReady()){for(b in a.superClasses)c=a.superClasses[b],this.initiateSubClassing(c);a.ready=!0}for(b in a.superClasses)c=a.superClasses[b],this.subClass(a.getClass(),c.getClass());for(b in a.subClasses)c=a.subClasses[b],c.searched||this.initiateSubClassing(c)}},subClass:function(a,b){var c;c=a.prototype.prototype?COM.SCM.SubClassTree.extend({},
a.prototype.prototype):COM.SCM.SubClassTree.extend({},a.prototype);b.prototype.prototype?COM.SCM.SubClassTree.extend(a.prototype,b.prototype.prototype):COM.SCM.SubClassTree.extend(a.prototype,b.prototype);COM.SCM.SubClassTree.extend(a.prototype,c)}};COM.SCM.SubClassTree.extend=function(){var a=arguments[0],b,c,d;for(b in arguments)if(arguments[b]!==a&&typeof arguments[b]==="object")for(d in c=arguments[b],c)a[d]=c[d];return a};COM.SCM.SubClassTreeNode=function(a){return this.init(a)};
COM.SCM.SubClassTreeNode.prototype={givenClass:null,subClasses:null,superClasses:null,ready:!1,searched:!1,init:function(a){this.givenClass=a;this.subClasses=[];this.superClasses=[];return this},equals:function(a){return this.givenClass===a.givenClass},linkSuper:function(a){this.superClasses.push(a)},linkSub:function(a){this.subClasses.push(a)},checkSuperReady:function(){var a,b=!0;for(a in this.superClasses)if(!this.superClasses[a].ready){b=!1;break}return this.ready=b},getClass:function(){return this.givenClass}};
COM.SCM.SUB_CLASS_MANAGER=new COM.SCM.SubClassManager;COM.SCM.SubClassManager.subClass=function(a,b){COM.SCM.SUB_CLASS_MANAGER.addSubClass(a,b)};COM.SCM.SubClassManager.finalizeSubClass=function(){COM.SCM.SUB_CLASS_MANAGER.initiateSubClassing();COM.SCM.SUB_CLASS_MANAGER.clean()};
COM.ClassObject=function(a,b){if(typeof a!=="string")throw Error("ClassObject needs a string class name");var c=this;c.className=a;c.classHierarchy={};c.classObj=b?global[a]=function(){throw Error("Abstract classes cannot be instantiated.");}:global[a]=function(){var b=this[a],c=[],f;for(f in arguments)c.push(arguments[f]);return b.apply(this,c)};c.classObj.prototype[a]=c.defaultConstructor;c.classObj.prototype["_"+a]=c.defaultDestructor;c.classObj.prototype.getClassName=function(){return c.className};
c.classHierarchy=COM.ClassObject.classHierarchy[c.className]=new COM.ClassHierarchy(c.className);c.classHierarchy.addClass(c.classObj);return c};
COM.ClassObject.prototype={classObj:null,className:null,classHierarchy:null,defaultConstructor:function(){},defaultDestructor:function(){},extend:function(){var a,b;for(b in arguments)a=arguments[b],a=COM.ClassObject.obtainNamespace(a),subClass(this.classObj,a),this.classHierarchy.extendHierarchy(COM.ClassObject.classHierarchy[a.prototype.getClassName()]);return this},assign:function(a){if(typeof a!=="object")return null;COM.SCM.SubClassTree.extend(this.classObj.prototype,a);return this},namespace:function(a){COM.ClassObject.obtainNamespace(a)[this.className]=
this.classObj;delete global[this.className];return this},statics:function(a){var b;if(typeof a!=="object")throw Error("Statics requires an Object, got "+a);for(b in a)this.classObj[b]=this.classObj[b]||a[b]}};COM.ClassHierarchy=function(a){return this.ClassHierarchy(a)};
COM.ClassHierarchy.prototype={className:null,hierarchy:null,ClassHierarchy:function(a){this.className=a;this.hierarchy={};this.addClass(Object);return this},hasClass:function(a){return typeof a==="string"?this.hasClassName(a):this.hasClassType(a)},hasClassName:function(a){for(var b in this.hierarchy)if(b===a)return!0;return!1},hasClassType:function(a){for(var b in this.hierarchy)if(this.hierarchy[b]===a)return!0;return!1},addClass:function(a){var b=COM.ClassHierarchy.getClassName(a);if(typeof a!==
"function"||!b)throw Error("A class hierarchy is only valid for objects");this.hierarchy[b]=a;return this},extendHierarchy:function(a){return COM.SCM.SubClassTree.extend(this.hierarchy,a.hierarchy)},get:function(){return this.hierarchy}};COM.ClassHierarchy.isObject=function(a){return typeof a==="object"&&a.constructor===Object};COM.ClassHierarchy.classIsObject=function(a){return typeof a==="function"&&a===Object};COM.ClassHierarchy.isArray=function(a){return typeof a==="object"&&a.constructor===Array};
COM.ClassHierarchy.classIsArray=function(a){return typeof a==="function"&&a===Array};COM.ClassHierarchy.isBoolean=function(a){return typeof a==="boolean"};COM.ClassHierarchy.classIsBoolean=function(a){return typeof a==="function"&&a===Boolean};COM.ClassHierarchy.isNumber=function(a){return typeof a==="number"};COM.ClassHierarchy.classIsNumber=function(a){return typeof a==="function"&&a===Number};COM.ClassHierarchy.isString=function(a){return typeof a==="string"};
COM.ClassHierarchy.classIsString=function(a){return typeof a==="function"&&a===String};
COM.ClassHierarchy.getClassName=function(a){var b=void 0;if(a.getClassName)b=a.getClassName();else if(a.prototype&&a.prototype.getClassName)b=a.prototype.getClassName();else if(COM.ClassHierarchy.classIsArray(a)||COM.ClassHierarchy.isArray(a))b="Array";else if(COM.ClassHierarchy.classIsObject(a)||COM.ClassHierarchy.isObject(a))b="Object";else if(COM.ClassHierarchy.isBoolean(a)||COM.ClassHierarchy.classIsBoolean(a))b="Boolean";else if(COM.ClassHierarchy.isNumber(a)||COM.ClassHierarchy.classIsNumber(a))b=
"Number";else if(COM.ClassHierarchy.isString(a)||COM.ClassHierarchy.classIsString(a))b="String";return b};COM.ClassObject.classHierarchy={};COM.ClassObject.classHierarchy.Object=new COM.ClassHierarchy("Object");COM.ClassObject.classHierarchy.Array=(new COM.ClassHierarchy("Array")).addClass(Array);COM.ClassObject.classHierarchy.Boolean=(new COM.ClassHierarchy("Boolean")).addClass(Boolean);COM.ClassObject.classHierarchy.Number=(new COM.ClassHierarchy("Number")).addClass(Number);
COM.ClassObject.classHierarchy.String=(new COM.ClassHierarchy("String")).addClass(String);COM.ClassObject.__abstractFunction__=function(){throw Error("Abstract functions cannot be run.");};COM.ClassObject.abstractFunction=function(){return COM.ClassObject.__abstractFunction__};
COM.ClassObject.overload=function(){var a=arguments.length,b,c,d,e;e=function(){var a=e[arguments.length+"ArgumentOverload"],b=[],c;if(!a)throw Error("No override exists for "+arguments.length+" arguments.");for(c in arguments)b[c]=arguments[c];return a.apply(a,b)};for(b=0;b<a;b+=2)c=arguments[b],d=arguments[b+1],typeof c==="function"&&typeof d==="number"&&(e[d+"ArgumentOverload"]=c);return e};
COM.ClassObject.overloadWithTypes=function(){var a=arguments.length,b,c,d,e,f,g;g=function(){var a,b,c,d,e,f,h;for(e in g.overloadFunctions){h=!0;a=g.overloadFunctions[e];b=g.overloadTypes[e];if(arguments.length>0)for(f in arguments){if(d=b[f],c=COM.ClassHierarchy.getClassName(arguments[f]),c=COM.ClassObject.classHierarchy[c],!c.hasClass(d)){h=!1;break}}else b.length!==0&&(h=!1);if(h){e=[];for(f in arguments)e[f]=arguments[f];return a.apply(a,e)}}if(!h){a="No overload for function(";for(e=0;e<arguments.length;e++)a+=
COM.ClassHierarchy.getClassName(arguments[e]),e<arguments.length-1&&(a+=", ");a+=")";throw Error(a);}return null};g.overloadTypes={};g.overloadFunctions={};for(b=0;b<a;b+=2){e=arguments[b];d=arguments[b+1];f="overload";for(c in e)e[c]=COM.ClassObject.obtainNamespace(e[c]),f+="_"+COM.ClassHierarchy.getClassName(e[c]);g.overloadFunctions[f]=d;d=g.overloadTypes[f]=[];for(c in e)className=COM.ClassHierarchy.getClassName(e[c]),d[d.length]=className}return g};
COM.ClassObject.destroy=function(a){var b;a["_"+a.getClassName()]();for(b in a)delete a[b]};COM.ClassObject.obtainNamespace=function(a){var b,c,d;if(typeof a==="object"||typeof a==="function")return a;if(typeof a!=="string")throw Error("A namespace must be an object or string literal.");b=b=a.split(".");a=global;for(c in b)if(b[c]==="*"){c={};for(d in a)c[d]=a[d];c.__NamespaceList__=!0;return c}else a[b[c]]=a[b[c]]||new Namespace(b[c]),a=a[b[c]];return a};
COM.ClassObject.using=function(a){var b,a=COM.ClassObject.obtainNamespace(a);for(b in a)!a[b].__Namespace__&&b!=="__Namespace__"&&(global[b]=a[b])};COM.ClassObject.unusing=function(a){var b,a=COM.ClassObject.obtainNamespace(a);for(b in a)a[b].__Namespace__||delete global[b]};
COM.ClassObject.define=function(a,b){if(typeof a!=="string")throw Error("use: define(String classDesignation, Boolean isAbstract)");var c=a.lastIndexOf(".")!==-1,d=c?a.substring(0,a.lastIndexOf(".")):"",e=c?a.substring(a.lastIndexOf(".")+1,a.length):a,d=COM.ClassObject.obtainNamespace(d);if(c){if(d[e])throw Error(a+" is previously defined.");}else if(global[e])throw Error(e+" is previously defined.");b=typeof b==="string"?b.toLowerCase()==="abstract"?!0:!1:b?!0:!1;e=new COM.ClassObject(e,b);c&&e.namespace(d);
return e};global.namespace=COM.namespace;global.using=COM.ClassObject.using;global.unusing=COM.ClassObject.unusing;global.define=COM.ClassObject.define;global.destroy=COM.ClassObject.destroy;if((COMOptions.overloadType=COMOptions.overloadType||"typed")==="typed")global.overload=COM.ClassObject.overloadWithTypes;else if(COMOptions.overloadType==="untyped")global.overload=COM.ClassObject.overload;global.abstractFunction=COM.ClassObject.abstractFunction;global.finalizeSubClass=COM.SCM.SubClassManager.finalizeSubClass;
global.subClass=COM.SCM.SubClassManager.subClass;
